import { createBrowserRouter } from 'react-router-dom';
import BlankLayout from '../components/Layouts/BlankLayout';
import DefaultLayout from '../components/Layouts/DefaultLayout';
import { routes } from './routes';
import PrivateRouter from './PrivateRouter';
const permissions: string[] = [
    'view:public',
    'view:about',
    'view:error',
    'view:analytics',
    'view:finance',
    'view:crypto',
    'view:todolist',
    'view:notes',
    'view:contacts',
    'view:mailbox',
    'view:invoice:list',
    'view:chat',
    'view:scrumboard',
    'view:calendar',
    'view:invoice:preview',
    'view:invoice:add',
    'view:invoice:edit',
    'view:tabs',
    'view:accordions',
    'view:modals',
    'view:cards',
    'view:carousel',
    'view:countdown',
    'view:counter',
    'view:sweetalert',
    'view:timeline',
    'view:notification',
    'view:media-object',
    'view:list-group',
    'view:pricing-table',
    'view:lightbox',
    'view:alerts',
    'view:avatar',
    'view:badges',
    'view:breadcrumbs',
    'view:buttons',
    'view:buttons-group',
    'view:color-library',
    'view:dropdown',
    'view:infobox',
    'view:jumbotron',
    'view:loader',
    'view:pagination',
    'view:popovers',
    'view:progress-bar',
    'view:search',
    'view:tooltips',
    'view:treeview',
    'view:typography',
    'view:widgets',
    'view:font-icons',
    'view:dragndrop',
    'view:tables',
    'view:datatables:basic',
    'view:datatables:advanced',
    'view:datatables:skin',
    'view:datatables:order-sorting',
    'view:datatables:multi-column',
    'view:datatables:multiple-tables',
    'view:datatables:alt-pagination',
    'view:datatables:checkbox',
    'view:datatables:range-search',
    'view:datatables:export',
    'view:datatables:column-chooser',
    'view:profile',
    'view:account-setting',
    'view:knowledge-base',
    'view:contact-us-boxed',
    'view:contact-us-cover',
    'view:faq',
    'view:coming-soon-boxed',
    'view:coming-soon-cover',
    'view:error404',
    'view:error500',
    'view:error503',
    'view:maintenance',
    'view:login-boxed',
    'view:register-boxed',
    'view:unlock-boxed',
    'view:recover-id-boxed',
    'view:login-cover',
    'view:register-cover',
    'view:unlock-cover',
    'view:recover-id-cover',
    'view:forms',
    'view:forms:basic',
    'view:forms:input-group',
    'view:forms:layouts',
    'view:forms:validation',
    'view:forms:input-mask',
    'view:forms:select2',
    'view:forms:touchspin',
    'view:forms:checkbox-radio',
    'view:forms:switches',
    'view:forms:wizards',
    'view:forms:file-upload-preview',
    'view:forms:quill-editor',
    'view:forms:markdown-editor',
    'view:forms:date-range-picker',
    'view:forms:clipboard',
];
const finalRoutes = routes.map((route) => {
    return {
        ...route,
        element: route.layout === 'blank'
            ? <BlankLayout>{route.element}</BlankLayout>
            : <PrivateRouter><DefaultLayout>{route.element}
                {/* withApiHandler({route.element}) */}
            </DefaultLayout></PrivateRouter>,
    };
});

const router = createBrowserRouter(finalRoutes);

export default router;
